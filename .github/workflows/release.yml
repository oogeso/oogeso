name: Create Release

on:
  push:
    # Run when a tag matches v*, i.e. v0.1.0, v.1.30, etc.
    tags:
      - 'v*'

jobs:
  autorelease:
    name: Create Release
    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0
        with:
          fetch-depth: 0

      - name: Setup Python 3.9
        uses: actions/setup-python@v4.3.0
        with:
          python-version: '3.9'

      - uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-create: true

      - name: Add project version to environment vars
        run: |
          PROJECT_VERSION=$(poetry version --short)
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV

      - name: Check if tag version matches project version
        run: |
          TAG=$(git describe HEAD --tags --abbrev=0)
          echo $TAG
          echo $PROJECT_VERSION
          if [[ "$TAG" != "v$PROJECT_VERSION" ]]; then exit 1; fi

      - name: Check pyproject.toml validity
        run: poetry check --no-interaction

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3.0.11
        with:
          path: ${{github.workspace}}/.venv
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-

      - name: Install dependencies  # if cache has changed
        if: steps.cache-deps.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction

      - name: Run tests
        run: poetry run pytest -v

      - name: Build
        run: poetry build

      - name: Release Notes
        run: git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/release_template.md"

      - name: Create Release Draft
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/release_template.md"
          draft: true
          files: |
            dist/random_standup-${{env.PROJECT_VERSION}}-py3-none-any.whl
            dist/random-standup-${{env.PROJECT_VERSION}}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}