name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - published
  schedule:
    # Run CI daily and check that tests are working with latest dependencies
    - cron: "0 0 * * *"

jobs:
  oogeso:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    env:
      PYTHONWARNINGS: default
    steps:
      - name: 📖 Checkout commit locally
        uses: actions/checkout@v2

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install oogeso
        run: |
          pip install .

      - name: 📦 Install test dependencies
        run: pip install .[tests]

      - name: 🧾 List all installed packages
        run: pip freeze

      - name: 🕵️ Check code style & linting
        run: |
          black --check bin/ tests/ src/ setup.py

      # pylint bin/ src/ tests/ setup.py
      # mypy --ignore-missing-imports bin/ src/ setup.py

      - name: 🤖 Run tests
        run: |
          pytest --cov=oogeso --cov-fail-under=30 ./tests
      #- name: 📚 Build documentation
      #  run: |
      #    pushd docs
      #    make html
      #    popd
      #- name: 🚢 Build and deploy Python package
      #  if: github.event_name == 'release' && matrix.python-version == '3.7'
      #  env:
      #    TWINE_USERNAME: __token__
      #    TWINE_PASSWORD: ${{ secrets.pypi_oogeso_token }}
      #  run: |
      #    python -m pip install --upgrade setuptools wheel twine
      #    python setup.py bdist_wheel
      #    twine upload dist/*
      #- name: 📚 Update GitHub pages
      #  if: github.event_name != 'schedule' && github.ref == 'refs/heads/master' && matrix.python-version == '3.7'
      #  run: |
      #    cp -R ./docs/_build ../_build
      #    git config --local user.email "oogeso-github-action"
      #    git config --local user.name "oogeso-github-action"
      #    git fetch origin gh-pages
      #    git checkout --track origin/gh-pages
      #    git clean -f -f -d -x
      #    git rm -r *
      #    cp -R ../_build/html/* .
      #    git add .
      #    if git diff-index --quiet HEAD; then
      #      echo "No changes in documentation. Skip documentation deploy."
      #    else
      #      git commit -m "Update Github Pages"
      #      git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" gh-pages
      #    fi
